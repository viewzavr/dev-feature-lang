кажется естественным поселить процесс на удаленном мире и запитаться от его output.
а заодно и input. а потом вероятно захочется выставлять ему параметры и вызывать его методы
и читать произвольные события. странно это все. но надо как-то начинать.

странность же в том что получается мене хочется работать не с 1 каналом а с пачкой каналов.
но я попробовал начать работу с каналов и получилась какая-то ерунда (не проворачиваются мозги).

с процессом вижу так:
//create-object-remote @remote input="

create-remote-object @remote "some-thing { any-thing } | geta 'sigma'" @alfa @beta @gamma
я тут думал позиционные аргументы передавать.. но это все так странно... давайте для начала хотя бы ток инпут..

@sigma | remote-object @remote "some-thing | m_eval .... " | тут результат.

т.е. я пока вовсе без каналов обхожусь. ну ок.

получается remote-object должна: послать в @remote сигнал на создание объекта, и далее посылать туда инпут, и принимать оттуда аутпут.
хых. ну это вариант, для начала. для самого начала.

-----
стал делать вродде норм. но удобнее получается открыть как бы сессию. и в рамках этой сессии обмениваться.
и чтобы идентификатор сессии был и все разруливал как надо.

---------
так-то надо было может делать не сессии, а фильтр.. ну ладно.. а может фильтр допом..

--------------------
решил сделать что remote-object и object-on-server пусть берут на вход коммуникаторы (сиречь каналы ws)
которым можно слать и получать сообщения.
а потом мы их уже обернем в сессионные штуки (началась сессия => динамически создали отдельную оболочку-фильтр в виде компаланг-процесса даже)
и уже внутри нее создавать объект.

***************************
вообще странно это все. почему не работает
m-on "msg" fn ?

-----
чет подумал что похоже было бы проще просто создавать вебсокет сервер на js вот этот объектовый да и все.

------------
идея - чтобы при пересоединении происходил реконнект к объектам... хотя это рано еще.
надо научиться создавать объекты любые при соединении

-------
идея - надо сделать выбор сессии по ключу. т.е. session-server @s "alfa"

идея - object-on-server передать позиционные аргументы.. и тогда можно будет с ними работать. удобно..
но в целом это получается как вызов make-func в ответ на создание сессии. ну нормально.

плюс надо будет уметь make-func-у передавать тело как input..

ну и уже напрашивается вопрос адаптеров. т.е. on_message={ |alfa beta| ..... } автоматом сделали make-func.

и еще уже надо read @some | y-on { |alfa beta| .... }
ну т.е. я думаю это модификатор так-то. но если он один то не надо писать x-modify.. что-то такое.. и будет очень хорошо. вот увидишь.