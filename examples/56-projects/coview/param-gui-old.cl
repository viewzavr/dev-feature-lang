/* задача - реализовать гуи для объектов для визуального управления
   - составом сцены (некоторого ее среза)
     - в т.ч. рисовать параметры (гуи для них)
   - структурой сцены (связи по параметрам объектов, и по сигналам..)
   	 => нам надо уметь вычислить список совместимых параметров, с которым можно построить ссылку.
   - реакциями сцены (хотя это тут врод немного лишнее но запишем)
     - в частности понадобится список событий
*/

пример:
feature "my-object" {
  object {
  	gui-tab "main" "Надпись" // добавляет запись о табах. если уже есть main - ничего не делает.
  	gui-param
  	    "alfa" // можно и массив
  	    tab="main" // получается неявная "структурная" ссылка.. мб @main прямая ссылка? но как тогда ссылаться на табы созданные в базовом типе? сохранять ссылки на них?
  	    gui={ |in out name| input-float value=(@in | get-value) }
  	    // но вот я бы хотел - определить гуи для них совместно, а приоритет потом разный задать! чтобы они не подряд нарисовались

	gui-tab "extra" {
		gui-param "sigma" { input-float } //?

		gui-row {
			gui-param "teta" "zita" "beta" gui=@gui-slider //? как задать мин макс и прочее поведение слайдера?
		}

		gui-group "См. также" { // а вот это уже collapsible
			gui-param "mytextarea"
		}
	}
  }
}

// получается каждая запись вида gui-param должна выпихнуть наружу н записей о параметрах..

feature "gui-tab" {
	object tab_id=@.->0 title=@.->1
}

feature "gui-param" {
	object name=@.->0 tab_id=@..->tab_id? gui={ |in out name| text @name }
}

feature "gui-tab" {
	g: gui-param {{ catch-children "ch" external=true }} 
	   gui={ |in out name| 
		row {
			insert_children input=@.. list=@g->ch
		}
	   }
}

/////////////////////////////

feature "myobject"
  gui={ |x|
  	...
  }
{
	object {

	}
}  

забавно но выглядит жесть. уж лучше:

feature "myobject" {
	....
}

myobject.gui = {

}

кстати в целом неплохая вещь.. смешная конечно.. но..
но зато:

if (@somecase) {
	rect.color = 'red'
}

???????????? @x > 5
  points.radius = @x+2

codea


//////////////////////////////  